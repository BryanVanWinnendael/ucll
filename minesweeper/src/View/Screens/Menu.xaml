<UserControl  x:Class="View.Screens.Menu"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View.Screens"
        xmlns:converters="clr-namespace:View.Converters"
        mc:Ignorable="d"
        >


    <UserControl.Resources>

        <Style x:Key="GreenBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="#f6ca9f" />
            <Setter Property="BorderThickness" Value="3,3,0,0" />
        </Style>
        <Style x:Key="RedBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="#bf6f4a" />
            <Setter Property="BorderThickness" Value="0,0,5,5" />
        </Style>

        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
         
        </Style>

        <converters:BoolConverter x:Key="errorConverter"
                                          statusTrue= "Visible"
                                          statusFalse= "Hidden"
                                          />

        <Style  TargetType="Button">
            <Setter Property="HorizontalAlignment"
          Value="Center" />
            <Setter Property="VerticalAlignment"
          Value="Center" />
            <Setter Property="Foreground"
          Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg"
                Background="{TemplateBinding Background}"
                BorderThickness="2"
                BorderBrush="White">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                   Value="True">
                                <Setter Property="Background"
                    Value="#f6ca9f"
                    TargetName="bg" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="./Sounds/click.wav" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
       
    </UserControl.Resources>

    <Viewbox MaxWidth="550" Stretch="Uniform" VerticalAlignment="Center"  Margin="5 5 5 5">
        <Border
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        BorderThickness="3"
        CornerRadius="10"
        Padding="2"
        Background="#fec157" Width="583"
        >
            <Grid Height="700" Margin="10 10 10 10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="116"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" FontSize="64" Text="MineSweeper" HorizontalAlignment="Center" TextAlignment="Center" Foreground="white" FontWeight="Bold"/>

                <Grid Grid.Row="1" >
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Foreground="white" FontSize="45" Height="auto" Text="Flooding" />
                    <CheckBox Width="50" Height="50" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left"  FontSize="32" x:Name="cb1"
                    Foreground="white" IsChecked="{Binding Flooding.Value, UpdateSourceTrigger=PropertyChanged}">
                        <CheckBox.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="3" ScaleY="3"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </CheckBox.RenderTransform>
                    </CheckBox>

                </Grid>

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontSize="45" Text="Board Size" Foreground="white" />
                    <Grid Grid.Row="1" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Margin="0 0 15 0" Grid.Column="0" Width="200" Height="50" Text="{Binding ElementName=size,Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" FontSize="32"/>
                        <Slider VerticalAlignment="Center" Grid.Column="1" Minimum="{Binding MinimumBoardSize}"  Maximum="{Binding MaximumBoardSize}" Name="size" Value="{Binding Size.Value}" Width="275"/>
                    </Grid>
                    <TextBlock Grid.Row="2" FontSize="22" Text="Size must be between 5 and 20" Visibility="{Binding ErrorSize.Value, Converter={StaticResource errorConverter}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Center" Foreground="DarkRed"/>
                </Grid>

                <Grid Margin="0 15 0 15" Grid.Row="3">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Foreground="white" FontSize="45" Text="Probability"/>
                    <Grid Grid.Row="1" Margin="0 -10 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBox Width="200" Height="40" HorizontalAlignment="Left" Grid.Column="0" Text="{Binding Probability.Value}" TextAlignment="Center" FontSize="32" />
                        <TextBlock Margin="10 0 0 10" Grid.Column="1" FontSize="40" Text="%" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Left" Foreground="White"/>
                    </Grid>
                    <TextBlock Grid.Row="2" FontSize="22" Text="Probability must be between 1 and 100" Visibility="{Binding ErrorProbability.Value, Converter={StaticResource errorConverter}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Center" Foreground="DarkRed"/>
                </Grid>

                <Grid Grid.Row="4" HorizontalAlignment="Stretch">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Margin="0 0 0 5" FontSize="45" Text="Quick start" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Center" Foreground="White"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Button Command="{Binding SwitchDifficultyEasy}" Foreground="White" Background="#e69c69" Grid.Column="0" Height="45" Width="120" Content="Easy" FontSize="20" FontWeight="SemiBold"></Button>
                            <Button Command="{Binding SwitchDifficultyNormal}" Foreground="White" Background="#e69c69" Grid.Column="1" Height="45" Width="120" Content="Normal" FontSize="20" FontWeight="SemiBold"></Button>
                            <Button Command="{Binding SwitchDifficultyHard}" Foreground="White" Background="#e69c69" Grid.Column="2" Height="45" Width="120" Content="Hard" FontSize="20" FontWeight="SemiBold"></Button>

                        </Grid>
                    </Grid>
                </Grid>

                <Grid Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Height="53" Width="504">
                    <Button Content="Start Game" HorizontalAlignment="Center" Width="500" Height="50"  Foreground="White" Grid.Row="4" Grid.RowSpan="3" Command="{Binding SwitchToScreenGame}" Background="#e69c69" FontWeight="Bold" FontSize="32" />
                </Grid>
            </Grid>
        </Border>
    </Viewbox>
</UserControl>
